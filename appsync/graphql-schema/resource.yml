
  ASGraphQLSchemaUMT:
    Type: AWS::AppSync::GraphQLSchema
    Properties: 
      ApiId: !GetAtt ASGraphQLApiUMT.ApiId
      Definition: >
        type User {
          email: String
          geohash: String
          coords: String
          ageMinFilter: Int
          ageMaxFilter: Int
          matchFilter: [String]
          positions: [String]
          skills: String
          foot: String
          weight: Int
          height: Int
        }
        
        type UserList {
          items: [User]
          nextToken: String
        }

        type Team {
          id: String
          createdOn: String
          name: String
          picture: String
          formation: String
          geohash: String
          coords: String
          genderFilter: [String]
          ageMinFilter: Int
          ageMaxFilter: Int
          matchFilter: [String]
        }

        type TeamList {
          items: [Team]
          nextToken: String
        }

        type TeamMember {
          teamId: String
          email: String
          name: String
          position: String
          role: [String]
          reqStat: String
          number: Int
          joinedOn: String
        }

        type TeamMemberList {
          items: [TeamMember]
          nextToken: String
        }

        type TeamChat {
          teamId: String
          email: String
          sentOn: String
          expireOn: String
          author: String
          msg: String
        }

        type TeamChatList {
          items: [TeamChat]
          nextToken: String
        }

        type Match {
          teamId1: String
          teamId2: String
          createdOn: String
          patches: String
          positions: [String]
          expireOn: String
          schedule: String
          reqStat: String
          geohash: String
          coords: String
          genderFilter: [String]
          ageMinFilter: Int
          ageMaxFilter: Int
          matchFilter: [String]
          stadiumGeohash: String
          stadiumId: String
          courtId: Int
        }

        type MatchList {
          items: [Match]
          nextToken: String
        }

        type MatchPatch {
          teamId1: String
          teamId2: String
          email: String
          name: String
          reqStat: String
          joinedOn: String
          expireOn: String
        }

        type MatchPatchList {
          items: [MatchPatch]
          nextToken: String
        }

        type MatchChat {
          teamId1: String
          teamId2: String
          email: String
          sentOn: String
          author: String
          msg: String
          expireOn: String
        }

        type MatchChatList {
          items: [MatchChat]
          nextToken: String
        }

        type Stadium {
          geohash: String
          id: String
          createdOn: String
          name: String
          matchFilter: [String]
          coords: String
          address: String
        }

        type StadiumList {
          items: [Stadium]
          nextToken: String
        }

        type Court {
          stadiumId: String
          stadiumGeohash: String
          id: String
          createdOn: String
          matchFilter: [String]
          material: String
        }

        type CourtList {
          items: [Court]
          nextToken: String
        }

        type Mutation {
          addUser(
            latitude: Float!,
            longitude: Float!,
            email: String!,
            ageMinFilter: Int!,
            ageMaxFilter: Int!,
            matchFilter: [String!]!,
            positions: [String],
            skills: String,
            foot: String!,
            weight: Int!,
            height: Int!
          ): User

          addTeam(
            name: String!,
            geohash: String!,
            latitude: Float!,
            longitude: Float!,
            picture: String,
            genderFilter: [String!]!,
            ageMinFilter: Int!,
            ageMaxFilter: Int!,
            matchFilter: [String!]!
          ): Team

          addTeamMember(
            teamId: String!,
            email: String!,
            name: String!,
            role: [String],
            reqStat: String!
          ): TeamMember

          addTeamChat(
            teamId: String!,
            email: String!,
            author: String!,
            msg: String!
          ): TeamChat

          addMatch(
            teamId1: String!,
            teamId2: String!,
            matchFilter: [String!]!,
            genderFilter: [String!]!,
            ageMinFilter: Int!,
            ageMaxFilter: Int!,
            geohash: String!,
            latitude: Float!,
            longitude: Float!
          ): Match

          addMatchPatch(
            teamId1: String!,
            teamId2: String!,
            email: String!,
            name: String!,
            reqStat: String,
            expireOn: String!
          ): MatchPatch

          addMatchChat(
            teamId1: String!,
            teamId2: String!,
            email: String!,
            author: String!,
            msg: String!,
            expireOn: String!
          ): MatchChat

          addStadium(
            latitude: Float!,
            longitude: Float!,
            name: String!,
            matchFilter: [String!]!,
            address: String
          ): Stadium

          addCourt(
            stadiumId: String!,
            stadiumGeohash: String!,
            matchFilter: [String!]!,
            material: String!
          ): Court

          updateUser(
            latitude: Float!,
            longitude: Float!,
            email: String!,
            ageMinFilter: Int!,
            ageMaxFilter: Int!,
            matchFilter: [String]!,
            positions: [String]!,
            skills: String!,
            foot: String!,
            weight: Int!,
            height: Int!
          ): User

          updateMatch(
            teamId1: String!,
            teamId2: String!,
            patches: String!,
            positions: [String]!,
            schedule: String!,
            reqStat: String!,
            genderFilter: [String]!,
            ageMinFilter: Int!,
            ageMaxFilter: Int!,
            matchFilter: [String]!,
            stadiumGeohash: String!,
            stadiumId: String!,
            courtId: Int!
          ): Match

          updateTeamMember(
            teamId: String!,
            email: String!,
            name: String!,
            position: String!,
            role: [String]!,
            reqStat: String!,
            number: Int!
          ): TeamMember
        }

        type Query {
          getUser(
            email: String!
          ): User

          getTeam(
            id: String!
          ): Team

          getTeamMember(
            teamId: String!,
            email: String!
          ): TeamMember

          nearTeams(
            email: String!,
            ownTeams: [String],
            geohash: String!,
            forJoin: Boolean!,
            gender: String!,
            age: Int!,
            genderFilter: [String]!,
            ageMinFilter: Int!,
            ageMaxFilter: Int!,
            matchFilter: [String]!,
            nextToken: String
          ): TeamList

          getMatch(
            teamId1: String!,
            teamId2: String!
          ): Match

          nearMatches(
            email: String!,
            geohash: String!,
            ownTeams: [String],
            gender: String!,
            age: Int!,
            ageMinFilter: Int!,
            ageMaxFilter: Int!,
            matchFilter: [String]!,
            nextToken: String
          ): MatchList

          listTeams(
            email: String!,
            nextToken: String
          ): TeamList

          teamRequests(
            id: String!,
            nextToken: String
          ): TeamMemberList

          teamMemberRequests(
            email: String!,
            nextToken: String
          ): TeamMemberList

          listMatches(
            id: String,
            email: String,
            nextToken: String
          ): MatchList

          matchRequests(
            id: String!,
            nextToken: String
          ): MatchList

          matchPatchRequests(
            email: String!,
            nextToken: String
          ): MatchPatchList

          listMatchPatches(
            teamId1: String!,
            teamId2: String!,
            nextToken: String
          ): MatchPatchList

          getMatchPatch(
            teamId1: String!,
            teamId2: String!,
            email: String!
          ): MatchPatch

          listTeamChats(
            id: String!,
            nextToken: String
          ): TeamChatList
        }

        schema {
          query: Query
          mutation: Mutation
        }
